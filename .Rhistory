#scale_fill_manual(values = c("yellow","orange", "white")) +
ylab("AGE (y)") +
xlab("YEAR")  +
#title( "Lexis Diagram of invitations in CPH") +
theme(legend.position="none")
p2 <- p + geom_polygon(aes(group=id), alpha=1,colour="black", fill=NA)
p2
x0 <- c(0,0,2,2);  y0 <-c(0,5,7,2) ;  id0 <- c(0,0,0,0) ; value0 <- c(1,1,1,1)
x<-x0; y<-y0;  id<-id0 ; value <- value0
for ( i in 1:8) {
x <- c(x, x0+2*i)
y <- c(y, y0+2*i)
id <- c(id,id0+i)
value <- c(value, value0)
}
x0 <- c(0,0,2,2);  y0 <- c(0,5,7,2) +5  ;  id0 <- c(9,9,9,9) ; value0 <- c(2,2,2,2)
x<-c(x,x0); y<-c(y,y0);  id<-c(id,id0) ; value <- c(value,value0)
for ( i in 1:8) {
x <- c(x, x0+2*i)
y <- c(y, y0+2*i)
id <- c(id,id0+i)
value <- c(value, value0)
}
# now the white ones ::
x1 <-  sort(c(18:11, 18:11), decreasing=T)
xx <- c(11, x1)
y1 <- rep(c(20,21), 7); y1
yy <- c(21,28,21,y1); yy; xx
length(xx) # 19
length(yy)
value2 <- rep(3,17)
id2 <- rep(20,17)
# the other one :
x3 <- c(0,0,2,2)
y3 <- c(10,15,17,12)
id3 <- c(21,21,21,21)
value3 <- c(4,4,4,4)
# next :
x4 <- c(0,0,1,1,2,2)
y4 <- c(10,15,16,15,16,12) + 5
id4 <- rep(22,6)
value4 <- rep(5,6)
## now all together ::
x <- c(x,xx,x3,x4); y <- c(y,yy, y3, y4); id <- c(id,id2, id3, id4) ; value <- c(value, value2, value3, value4)
x <- factor(x, levels = 0:18); y <- factor(y, levels = 0:28); id <- factor(id) ; value <- factor(value)
label_x <-as.character( c(1991:1999, 2000:2009))
levels(x) <- label_x
label_y <-as.character(50:78)
levels(y) <- label_y
#x_lab <- as.character(seq(1991,2009, by = 2))
x_lab <- levels(polys$x)
polys <- data.frame(id=id, x=x, y=y, value = value )
p <- ggplot(polys, aes(x=x, y=y))  +
geom_polygon( aes(fill = value,group=id) ) +
scale_x_discrete(drop=FALSE, limits = x_lab) +
scale_y_discrete(drop=FALSE) +
#scale_fill_discrete(drop=FALSE, limits = x_lab) +
#scale_fill_manual(values = c("yellow","orange", "white")) +
ylab("AGE (y)") +
xlab("YEAR")  +
#title( "Lexis Diagram of invitations in CPH") +
theme(legend.position="none")
p2 <- p + geom_polygon(aes(group=id), alpha=1,colour="black", fill=NA)
p2
x0 <- c(0,0,2,2);  y0 <-c(0,5,7,2) ;  id0 <- c(0,0,0,0) ; value0 <- c(1,1,1,1)
x<-x0; y<-y0;  id<-id0 ; value <- value0
for ( i in 1:8) {
x <- c(x, x0+2*i)
y <- c(y, y0+2*i)
id <- c(id,id0+i)
value <- c(value, value0)
}
x0 <- c(0,0,2,2);  y0 <- c(0,5,7,2) +5  ;  id0 <- c(9,9,9,9) ; value0 <- c(2,2,2,2)
x<-c(x,x0); y<-c(y,y0);  id<-c(id,id0) ; value <- c(value,value0)
for ( i in 1:8) {
x <- c(x, x0+2*i)
y <- c(y, y0+2*i)
id <- c(id,id0+i)
value <- c(value, value0)
}
# now the white ones ::
x1 <-  sort(c(18:11, 18:11), decreasing=T)
xx <- c(11, x1)
y1 <- rep(c(20,21), 7); y1
yy <- c(21,28,21,y1); yy; xx
length(xx) # 19
length(yy)
value2 <- rep(3,17)
id2 <- rep(20,17)
# the other one :
x3 <- c(0,0,2,2)
y3 <- c(10,15,17,12)
id3 <- c(21,21,21,21)
value3 <- c(4,4,4,4)
# next :
x4 <- c(0,0,1,1,2,2)
y4 <- c(10,15,16,15,16,12) + 5
id4 <- rep(22,6)
value4 <- rep(5,6)
## now all together ::
x <- c(x,xx,x3,x4); y <- c(y,yy, y3, y4); id <- c(id,id2, id3, id4) ; value <- c(value, value2, value3, value4)
x <- factor(x, levels = 0:18); y <- factor(y, levels = 0:28); id <- factor(id) ; value <- factor(value)
label_x <-as.character( c(1991:1999, 2000:2009))
levels(x) <- label_x
label_y <-as.character(50:78)
levels(y) <- label_y
#x_lab <- as.character(seq(1991,2009, by = 2))
x_lab <- levels(polys$x)
polys <- data.frame(id=id, x=x, y=y, value = value )
p <- ggplot(polys, aes(x=x, y=y))  +
geom_polygon( aes(fill = value,group=id) ) +
scale_x_discrete(drop=FALSE, limits = x_lab) +
scale_y_discrete(drop=FALSE) +
#scale_fill_discrete(drop=FALSE, limits = x_lab) +
scale_fill_manual(values = c("yellow","orange", "white", "white", "blue")) +
ylab("AGE (y)") +
xlab("YEAR")  +
#title( "Lexis Diagram of invitations in CPH") +
theme(legend.position="none")
p2 <- p + geom_polygon(aes(group=id), alpha=1,colour="black", fill=NA)
p2
p <- ggplot(polys, aes(x=x, y=y))  +
geom_polygon( aes(fill = value,group=id) ) +
scale_x_discrete(drop=FALSE, limits = x_lab) +
scale_y_discrete(drop=FALSE) +
#uncomment this to have your own colors for each part ::
#scale_fill_manual(values = c("yellow","orange", "white", "white", "blue")) +
ylab("AGE (y)") +
xlab("YEAR")  +
labs(title = "Lexis Diagram of invitations in CPH") +
#title( "Lexis Diagram of invitations in CPH") +
theme(legend.position="none")
p2 <- p + geom_polygon(aes(group=id), alpha=1,colour="black", fill=NA)
p2
poly3 <- data.frame( id = id3 , x = x3, y=y3 )
p2 + geom_polygon(data = poly3, aes(group=id), alpha=1,colour="red", fill=NA)
x3_ <- c(0,0,2,2) +1
y3_ <- c(10,15,17,12)
id3_ <- c(21,21,21,21)
poly3 <- data.frame( id = id3_ , x = x3_, y=y3_ )
p2 + geom_polygon(data = poly3, aes(group=id), alpha=1,colour="red", size = 1.1, fill=NA)
x3_ <- c(0,0,2,2) +1
y3_ <- c(10,15,17,12) +1
id3_ <- c(21,21,21,21)
poly3 <- data.frame( id = id3_ , x = x3_, y=y3_ )
p2 + geom_polygon(data = poly3, aes(group=id), alpha=1,colour="red", size = 1.1, fill=NA)
xt <- seq(2:19, by=2)
xt <- seq(2:18, by=2)
xt <- seq(2,18, by=2)
xt <- seq(2,18, by=2); xt
xt <- seq(2,18, by=2); xt # to be in the middle of the poly.
yt <- seq(5,25, by=5); yt
yt <- seq(5,25, by=2); yt
yt <- seq(5,25, by=2); length(yt)
xt <- seq(2,18, by=2); xt # to be in the middle of the poly.
yt <- seq(5,15, by=2); length(yt)
yt <- seq(5,120, by=2); length(yt)
yt <- seq(5,20, by=2); length(yt)
yt <- seq(5,22, by=2); length(yt)
xt <- seq(2,18, by=2); xt # to be in the middle of the poly.
yt <- seq(5,22, by=2); length(yt)
txt <- as.character(0:8)
xt2 <- xt
yt2 <- yt+5
xt <- c(xt,xt2); yt<- c(yt,yt2); txt <- c(txt,txt)
polytext <- data.frame(x=xt, y=yt, txt = txt)
p3 <- p2 + geom_polygon(data = poly3, aes(group=id), alpha=1,colour="red", size = 1.1, fill=NA) # add the red outline
p4 <- p3 + geom_text(data=polytext,aes(x=x,y=y,label=txt),vjust=-0.5)
p4
p4 <- p3 + geom_text(data=polytext,aes(x=x,y=y,label=txt),vjust=-1.5)
p4 <- p3 + geom_text(data=polytext,aes(x=x,y=y,label=txt),vjust=-1)
p4 <- p3 + geom_text(data=polytext,aes(x=x,y=y,label=txt))
p4
xt3 <- c(2,2,4,4)
yt3 <- c(4,9,6,11)
txt3 <- rep("neg. screens")
xt <- c(xt,xt2, xt3); yt<- c(yt,yt2,yt3); txt <- c(txt,txt,txt2)
xt <- c(xt,xt2, xt3); yt<- c(yt,yt2,yt3); txt <- c(txt,txt,txt3)
polytext <- data.frame(x=xt, y=yt, txt = txt)
txt3 <- rep("neg. screens", 4)
xt <- c(xt,xt2, xt3); yt<- c(yt,yt2,yt3); txt <- c(txt,txt,txt3)
polytext <- data.frame(x=xt, y=yt, txt = txt)
xt <- seq(2,18, by=2); xt # to be in the middle of the poly.
yt <- seq(5,22, by=2); length(yt)
txt <- as.character(0:8)
xt2 <- xt
yt2 <- yt+5
# the other text ::
xt3 <- c(2,2,4,4)
yt3 <- c(4,9,6,11)
txt3 <- rep("neg. screens", 4)
xt <- c(xt,xt2, xt3); yt<- c(yt,yt2,yt3); txt <- c(txt,txt,txt3)
polytext <- data.frame(x=xt, y=yt, txt = txt)
p4 <- p3 + geom_text(data=polytext,aes(x=x,y=y,label=txt))
p4
p4 <- p3 +
geom_text(data=polytext,aes(x=x,y=y,label=txt)) +
geom_hline(aes(yintercept="70"))
p4
p4 <- p3 +
geom_text(data=polytext,aes(x=x,y=y,label=txt)) +
geom_hline(aes(yintercept=10))
p4
p4 <- p3 +
geom_text(data=polytext,aes(x=x,y=y,label=txt)) +
geom_hline(aes(yintercept=20))
p4
p4 <- p3 +
geom_text(data=polytext,aes(x=x,y=y,label=txt)) +
geom_hline(aes(yintercept=21))
p4
p4 <- p3 +
geom_text(data=polytext,aes(x=x,y=y,label=txt)) +
geom_hline(aes(yintercept=21, linetype = "dotdash"), color = "red" )
p4
p4 <- p3 +
geom_text(data=polytext,aes(x=x,y=y,label=txt)) +
geom_hline(aes(yintercept=21), color = "red",  linetype = "dotdash" )
p4
plot <- p4
tiff(file = "C:/Users/jkc261/Documents/Projects/Sune/invitationsCPH.tif",width = 10, height = 7.5, units = "in", res = 500, compression="lzw")
#pdf(file = "P:/HorizonData/Bar Plots/BarPlotsAptima.pdf",width = 10, height = 7.5)
plot
dev.off()
polytext2 <- data.frame(x=xt3, y=yt3, txt = txt3)
p4 <- p3 +
geom_text(data=polytext,aes(x=x,y=y,label=txt)) +
geom_text(data=polytext,aes(x=x,y=y,label=txt). size = 2) +
geom_hline(aes(yintercept=21), color = "red",  linetype = "dotdash" )
p4
p4 <- p3 +
geom_text(data=polytext,aes(x=x,y=y,label=txt)) +
geom_text(data=polytext2,aes(x=x,y=y,label=txt), size = 2) +
geom_hline(aes(yintercept=21), color = "red",  linetype = "dotdash" )
p4
xt <- seq(2,18, by=2); xt # to be in the middle of the poly.
yt <- seq(5,22, by=2); length(yt)
txt <- as.character(0:8)
xt2 <- xt
yt2 <- yt+5
# the other text ::
xt3 <- c(2,2,4,4)
yt3 <- c(4,9,6,11)
txt3 <- rep("neg. screens", 4)
xt <- c(xt,xt2); yt<- c(yt,yt2); txt <- c(txt,txt)
polytext <- data.frame(x=xt, y=yt, txt = txt)
polytext2 <- data.frame(x=xt3, y=yt3, txt = txt3)
p4 <- p3 +
geom_text(data=polytext,aes(x=x,y=y,label=txt)) +
geom_text(data=polytext2,aes(x=x,y=y,label=txt), size = 2) +
geom_hline(aes(yintercept=21), color = "red",  linetype = "dotdash" )
p4
p4 <- p3 +
geom_text(data=polytext,aes(x=x,y=y,label=txt)) +
geom_text(data=polytext2,aes(x=x,y=y,label=txt), size = 3) +
geom_hline(aes(yintercept=21), color = "red",  linetype = "dotdash" )
p4
### saving to tiff ::
tiff(file = "C:/Users/jkc261/Documents/Projects/Sune/invitationsCPH.tif",width = 10, height = 7.5, units = "in", res = 500, compression="lzw")
#pdf(file = "P:/HorizonData/Bar Plots/BarPlotsAptima.pdf",width = 10, height = 7.5)
plot
dev.off()
plot <- p4
tiff(file = "C:/Users/jkc261/Documents/Projects/Sune/invitationsCPH.tif",width = 10, height = 7.5, units = "in", res = 500, compression="lzw")
#pdf(file = "P:/HorizonData/Bar Plots/BarPlotsAptima.pdf",width = 10, height = 7.5)
plot
dev.off()
# the first polygon:
x0 <- c(0,0,2,2);  y0 <-c(0,5,7,2) ;  id0 <- c(0,0,0,0) ; value0 <- c(1,1,1,1)
x<-x0; y<-y0;  id<-id0 ; value <- value0
x
y
id
library(Rcpp)
library(inline)
library(knit)
test <- read.csv(read.name, nrows = 5, colClasses = col_classes); test # check the data, take only the first 5 rows to see each col .
library(ff)
library(ffbase)
install.packages("ffbase")
install.packages("ffbase")
tempdir()
tempdir()
tempdir()
tempdir()
tempdir()
tempdir()
tempdir()
tempdir()
tempdir()
csvfile <- tempPathFile(
sessionInfo()
v <- 1:10
v <- 1:10
v <- v/10
v <- v*255
v
v <- v*(255 - 25.5)
v <- 1:10
v <- v/10
v <- v*(255 - 25.5)
v
v <- 1:9
v <- v/10
v <- v*(255)
v
v <- 1:9
v <- v/10
v <- v*(255)
v
v <- 1:9
v <- v/9
v <- v*(255)
v
v <- 1:10
v <- v/10
v <- v*(255)
v
0.947*0.944
0.9474*0.9444
library(survival)
library(ggplot2)
library(help=survival) # see the version number, list of available functions and data sets.
Ndata <- 10000
fu_ <- "exp"
rate_ <- 0.2
lifetimes <- rexp( Ndata, rate = rate_)
# plot histogram ::
df <- data.frame(lifetimes)
hist1 <- ggplot(df, aes(x=lifetimes)) +# geom_histogram(aes(y = ..density..),binwidth=.5) + geom_density() #
geom_histogram(binwidth=.5, colour="black", fill="chocolate1")
hist1
mean(lifetimes) # 5.2
summary(lifetimes)
sd(lifetimes)
mean(lifetimes) # 5.2
time  <- lifetimes
time.screened <-  rexp( Ndata, rate = rate_) + rnorm(Ndata,mean_,sd_)
time  <- lifetimes
mean_ <- 1
sd_ <- 0.00001
time.screened <-  rexp( Ndata, rate = rate_) + rnorm(Ndata,mean_,sd_)
time  <- lifetimes
mean_ <- 1
sd_ <- 0.00001
time.s <-  rexp( Ndata, rate = rate_) + rnorm(Ndata,mean_,sd_)
df <- data.frame(time,time.s)
df <- data.frame(time,time.s)
hist1 <- ggplot() +
geom_histogram(data=df, aes(x=time), binwidth=.5, colour="chocolate3", fill="chocolate1")
hist1
hist1 <- ggplot() +
geom_histogram(data=df, aes(x=time), binwidth=.5, colour="chocolate3", fill="chocolate1") +
geom_histogram(data=df, aes(x=time.s), binwidth=.5, colour="aquamarine3", fill="aquamarine1") +
hist1
hist1 <- ggplot() +
geom_histogram(data=df, aes(x=time), binwidth=.5, colour="chocolate3", fill="chocolate1") +
geom_histogram(data=df, aes(x=time.s), binwidth=.5, colour="aquamarine3", fill="aquamarine1")
hist1
hist1 <- ggplot() +
geom_histogram(data=df, aes(x=time), binwidth=.5, colour="chocolate3", fill="chocolate1", alpha=0.3) +
geom_histogram(data=df, aes(x=time.s), binwidth=.5, colour="aquamarine3", fill="aquamarine1", alpha=0.3)
hist1
hist1 <- ggplot() +
geom_histogram(data=df, aes(x=time.s), binwidth=.5, colour="chocolate3", fill="chocolate1", alpha=0.3) +
geom_histogram(data=df, aes(x=time), binwidth=.5, colour="aquamarine3", fill="aquamarine1", alpha=0.3)
hist1
hist1 <- ggplot() +
#geom_histogram(data=df, aes(x=time.s), binwidth=.5, colour="chocolate3", fill="chocolate1", alpha=0.3) +
#geom_histogram(data=df, aes(x=time), binwidth=.5, colour="aquamarine3", fill="aquamarine1", alpha=0.3)
geom_histogram(data=df, aes(x=time.s), binwidth=.5, fill="chocolate1", alpha=0.3) +
geom_histogram(data=df, aes(x=time), binwidth=.5, fill="aquamarine1", alpha=0.3)
hist1
hist1 <- ggplot() +
geom_histogram(data=df, aes(x=time.s), binwidth=.5, colour="chocolate3", fill="chocolate1", alpha=0.3) +
geom_histogram(data=df, aes(x=time), binwidth=.5, colour="aquamarine3", fill="aquamarine1", alpha=0.3)
hist1
lf <- data.frame( time,time.s  )
ggplot(lf, aes(x = 1:nrow(lf), y = time,group=1)) + geom_point()+xlab("index") #+ theme(axis.text.y = element_blank())
status <- rep(0,Ndata)
status.s <- status
lf$status <- status
lf$status.s <- status.s
fit <- survfit(Surv(time, status) ~ 1, data = lf)
fit.data <- data.frame(time = fit$time,survival = fit$surv)
p1 <- ggplot(fit.data, aes(x = time, y = survival,group=1)) + geom_line()# + theme()
p1
status <- rep(1,Ndata)
status.s <- status
lf$status <- status
lf$status.s <- status.s
fit <- survfit(Surv(time, status) ~ 1, data = lf)
fit.data <- data.frame(time = fit$time,survival = fit$surv)
p1 <- ggplot(fit.data, aes(x = time, y = survival,group=1)) + geom_line()# + theme()
p1
fit.s <- survfit(Surv(time.s, status.s) ~ 1, data = lf)
fit.data.s <- data.frame(time = fit.s$time,survival = fit.s$surv)
p2 <- ggplot(fit.data.s, aes(x = time, y = survival,group=1)) + geom_line()# + theme()
p2
ggplot() + geom_line(data=fit.data, aes(x = time, y = survival,group=1))
+ geom_line(data=fit.data, aes(x = time.s, y = survival.s,group=1))
ggplot() +
geom_line(data=fit.data, aes(x = time, y = survival,group=1)) +
geom_line(data=fit.data, aes(x = time.s, y = survival.s,group=1))
ggplot() +
geom_line(data=fit.data, aes(x = time, y = survival,group=1)) +
geom_line(data=fit.data.s, aes(x = time, y = survival,group=1))
ggplot() +
geom_line(data=fit.data, aes(x = time, y = survival,group=1,colour="chocolate1")) +
geom_line(data=fit.data.s, aes(x = time, y = survival,group=1,colour="aquamarine3"))
ggplot() +
geom_line(data=fit.data, aes(x = time, y = survival,group=1),colour="chocolate1") +
geom_line(data=fit.data.s, aes(x = time, y = survival,group=1),colour="aquamarine3")
setwd("P:/Data/Screening2/R")
read.csv(file="scr_data.csv",nrows=10,header=T)
dir2 <- "C:/Users/jkc261/Documents/Projects/Screening/R/data";
setwd(dir2);
data.screening <- read.csv(file="scr_data.csv",nrows=10,header=T)
names(data.screening)
sapply(data.screening[1,],class)
colclass <- c("factor", "Date","factor","Date","Date" ,"Date", "factor" ,"factor","factor", "integer"
,"factor","integer", "factor","Date")
require(ffbase)
names(colclass) <- names(data.screening)
data.screening <- read.csv.ffdf(file="scr_data.csv",header=T, colClasses=colclass)
names(data.screening)
head(data.screening)
colclass
colclass <- c("factor", "Date","factor","Date","Date" ,"Date", "factor" ,"factor","factor", "integer"
,"factor","integer", "factor","factor")
names(colclass) <- names(data.screening)
colclass
require(ffbase)
data.screening <- read.csv.ffdf(file="scr_data.csv",header=T, colClasses=colclass)
library(slidify)
setwd("C:/Users/jkc261/Documents/large_data_presentation")
require(googleVis)
time.names <- c("tapply","aggregate", "data.table", "sqldf", "Rcpp")
time.names <- factor(time.names, levels=time.names,ordered=T)
times.4 <- c(1476.97,1558.31,7.44,6.35,0.37)
tt <- round(times.4, digits =2) # 1476.97 1558.31    7.44    0.37
times.relative.4 <- round(times.4/0.37); times.relative.4 #  3992 4212   20    1
time_label <- c("27 minutes","26 minutes","7 seconds","6.3 seconds","0.37 seconds")
speed2 <- data.frame( method = time.names , time = times.4, time_relative = times.relative.4 , time_label)
tt/60
tt/60*10
tt/60*10/60
tt/60*10
tt*10
--------- |---------- |----------  |----------
runDeck()
runDeck()
runDeck()
runDeck()
runDeck()
runDeck()
runDeck()
haireye = as.data.frame(HairEyeColor)
haireye[1:4,]
gc() #   memory
Ndata = 5e6;  # number of observations. 20 million in this example.
N_ids = Ndata/10 # number of unique idents.
ident = factor( sample( 1000:(N_ids+1000), Ndata, replace = T)) # make ident as a sample from 1000 to 20 001 000
df <- ffdf( ident = ff(ident))  # create a ffdf database with a column ff( vector). This is written into disk.
rm(ident)
fdates <- ff(sample( 0:10000, Ndata, replace = T) + as.Date("1970-10-01"))
df$date <- fdates  # here we assign that vector to df.... if we change fdates, we will change df$date. This is diff from R.
fdiagnose <- ff(sample( factor(letters), Ndata, replace = T )) # this is ok, factors...
df$diagnose <- fdiagnose
fregion = ff( factor( sample( c("000","013" ,"014", "015", "020" ,"025", "030", "035" ,"040", "042", "050" ,"055" ,"060" ,"065" ,"070" ,"076", "080", "090"), Ndata, replace=T )) )
df$region <- fregion
df[1:3,]
data <- df[,]
screen <- data
runDeck()
runDeck()
data <- as.data.table(data, key="ident")
library(data.table)
data <- as.data.table(data, key="ident")
data <- as.data.table(data)
setkey(data,"ident")
screen <- data[,list(Freq = .N),by=list(region,diagnose)]
screen[1:2,]
runDeck()
n1 <- nPlot(Freq ~ diagnose, group = 'Region', type = 'multiBarChart',
data = subset(screen, diagnose %in% c("a","b","c"))
)
n1$print('chart1')
n1
screen[1:2,]
n1 <- nPlot(Freq ~ diagnose, group = 'region', type = 'multiBarChart',
data = subset(screen, diagnose %in% c("a","b","c"))
)
n1
runDeck()
runDeck()
gc()
data.screening <- read.csv.ffdf(file="C:/Users/jkc261/Documents/Projects/TMP/scr_data.csv",header=T, colClasses=colclass)
data.screening <- read.csv.ffdf(file="C:/Users/jkc261/Documents/Projects/TMP/scr_data.csv",header=T, colClasses=colclass,nrows=1e6)
data.screening[1,]
data <- data.screening
library(data.table)
data <- as.data.table(data)
data <- data.screening[,]
data <- as.data.table(data)
setkey(data,"ident")
screen <- data[,list(Freq = .N),by=list(screening_region2007,diagnoseklasse)]
screen[1:2,]
runDeck()
runDeck()
runDeck()
runDeck()
